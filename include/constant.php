<?php

# Don't touch this code. This is auto generated.

namespace ryunosuke\Functions\Package;

const arrayize = ['ryunosuke\\Functions\\Package\\Arrays', 'arrayize'];
const is_hasharray = ['ryunosuke\\Functions\\Package\\Arrays', 'is_hasharray'];
const first_key = ['ryunosuke\\Functions\\Package\\Arrays', 'first_key'];
const first_value = ['ryunosuke\\Functions\\Package\\Arrays', 'first_value'];
const first_keyvalue = ['ryunosuke\\Functions\\Package\\Arrays', 'first_keyvalue'];
const last_key = ['ryunosuke\\Functions\\Package\\Arrays', 'last_key'];
const last_value = ['ryunosuke\\Functions\\Package\\Arrays', 'last_value'];
const last_keyvalue = ['ryunosuke\\Functions\\Package\\Arrays', 'last_keyvalue'];
const prev_key = ['ryunosuke\\Functions\\Package\\Arrays', 'prev_key'];
const next_key = ['ryunosuke\\Functions\\Package\\Arrays', 'next_key'];
const in_array_and = ['ryunosuke\\Functions\\Package\\Arrays', 'in_array_and'];
const in_array_or = ['ryunosuke\\Functions\\Package\\Arrays', 'in_array_or'];
const array_add = ['ryunosuke\\Functions\\Package\\Arrays', 'array_add'];
const array_implode = ['ryunosuke\\Functions\\Package\\Arrays', 'array_implode'];
const array_sprintf = ['ryunosuke\\Functions\\Package\\Arrays', 'array_sprintf'];
const array_strpad = ['ryunosuke\\Functions\\Package\\Arrays', 'array_strpad'];
const array_pos = ['ryunosuke\\Functions\\Package\\Arrays', 'array_pos'];
const array_of = ['ryunosuke\\Functions\\Package\\Arrays', 'array_of'];
const array_get = ['ryunosuke\\Functions\\Package\\Arrays', 'array_get'];
const array_set = ['ryunosuke\\Functions\\Package\\Arrays', 'array_set'];
const array_unset = ['ryunosuke\\Functions\\Package\\Arrays', 'array_unset'];
const array_dive = ['ryunosuke\\Functions\\Package\\Arrays', 'array_dive'];
const array_exists = ['ryunosuke\\Functions\\Package\\Arrays', 'array_exists'];
const array_find = ['ryunosuke\\Functions\\Package\\Arrays', 'array_find'];
const array_grep_key = ['ryunosuke\\Functions\\Package\\Arrays', 'array_grep_key'];
const array_map_key = ['ryunosuke\\Functions\\Package\\Arrays', 'array_map_key'];
const array_filter_not = ['ryunosuke\\Functions\\Package\\Arrays', 'array_filter_not'];
const array_filter_key = ['ryunosuke\\Functions\\Package\\Arrays', 'array_filter_key'];
const array_filter_eval = ['ryunosuke\\Functions\\Package\\Arrays', 'array_filter_eval'];
const array_where = ['ryunosuke\\Functions\\Package\\Arrays', 'array_where'];
const array_map_filter = ['ryunosuke\\Functions\\Package\\Arrays', 'array_map_filter'];
const array_map_method = ['ryunosuke\\Functions\\Package\\Arrays', 'array_map_method'];
const array_maps = ['ryunosuke\\Functions\\Package\\Arrays', 'array_maps'];
const array_nmap = ['ryunosuke\\Functions\\Package\\Arrays', 'array_nmap'];
const array_lmap = ['ryunosuke\\Functions\\Package\\Arrays', 'array_lmap'];
const array_rmap = ['ryunosuke\\Functions\\Package\\Arrays', 'array_rmap'];
const array_each = ['ryunosuke\\Functions\\Package\\Arrays', 'array_each'];
const array_depth = ['ryunosuke\\Functions\\Package\\Arrays', 'array_depth'];
const array_insert = ['ryunosuke\\Functions\\Package\\Arrays', 'array_insert'];
const array_assort = ['ryunosuke\\Functions\\Package\\Arrays', 'array_assort'];
const array_count = ['ryunosuke\\Functions\\Package\\Arrays', 'array_count'];
const array_group = ['ryunosuke\\Functions\\Package\\Arrays', 'array_group'];
const array_all = ['ryunosuke\\Functions\\Package\\Arrays', 'array_all'];
const array_any = ['ryunosuke\\Functions\\Package\\Arrays', 'array_any'];
const array_order = ['ryunosuke\\Functions\\Package\\Arrays', 'array_order'];
const array_shuffle = ['ryunosuke\\Functions\\Package\\Arrays', 'array_shuffle'];
const array_shrink_key = ['ryunosuke\\Functions\\Package\\Arrays', 'array_shrink_key'];
const array_lookup = ['ryunosuke\\Functions\\Package\\Arrays', 'array_lookup'];
const array_columns = ['ryunosuke\\Functions\\Package\\Arrays', 'array_columns'];
const array_uncolumns = ['ryunosuke\\Functions\\Package\\Arrays', 'array_uncolumns'];
const array_convert = ['ryunosuke\\Functions\\Package\\Arrays', 'array_convert'];
const array_flatten = ['ryunosuke\\Functions\\Package\\Arrays', 'array_flatten'];
const array_nest = ['ryunosuke\\Functions\\Package\\Arrays', 'array_nest'];
const stdclass = ['ryunosuke\\Functions\\Package\\Classobj', 'stdclass'];
const detect_namespace = ['ryunosuke\\Functions\\Package\\Classobj', 'detect_namespace'];
const class_loader = ['ryunosuke\\Functions\\Package\\Classobj', 'class_loader'];
const class_namespace = ['ryunosuke\\Functions\\Package\\Classobj', 'class_namespace'];
const class_shorten = ['ryunosuke\\Functions\\Package\\Classobj', 'class_shorten'];
const class_replace = ['ryunosuke\\Functions\\Package\\Classobj', 'class_replace'];
const file_list = ['ryunosuke\\Functions\\Package\\FileSystem', 'file_list'];
const file_tree = ['ryunosuke\\Functions\\Package\\FileSystem', 'file_tree'];
const file_extension = ['ryunosuke\\Functions\\Package\\FileSystem', 'file_extension'];
const file_set_contents = ['ryunosuke\\Functions\\Package\\FileSystem', 'file_set_contents'];
const mkdir_p = ['ryunosuke\\Functions\\Package\\FileSystem', 'mkdir_p'];
const dirname_r = ['ryunosuke\\Functions\\Package\\FileSystem', 'dirname_r'];
const fnmatch_and = ['ryunosuke\\Functions\\Package\\FileSystem', 'fnmatch_and'];
const fnmatch_or = ['ryunosuke\\Functions\\Package\\FileSystem', 'fnmatch_or'];
const path_is_absolute = ['ryunosuke\\Functions\\Package\\FileSystem', 'path_is_absolute'];
const path_resolve = ['ryunosuke\\Functions\\Package\\FileSystem', 'path_resolve'];
const path_normalize = ['ryunosuke\\Functions\\Package\\FileSystem', 'path_normalize'];
const cp_rf = ['ryunosuke\\Functions\\Package\\FileSystem', 'cp_rf'];
const rm_rf = ['ryunosuke\\Functions\\Package\\FileSystem', 'rm_rf'];
const tmpname = ['ryunosuke\\Functions\\Package\\FileSystem', 'tmpname'];
const delegate = ['ryunosuke\\Functions\\Package\\Funchand', 'delegate'];
const nbind = ['ryunosuke\\Functions\\Package\\Funchand', 'nbind'];
const lbind = ['ryunosuke\\Functions\\Package\\Funchand', 'lbind'];
const rbind = ['ryunosuke\\Functions\\Package\\Funchand', 'rbind'];
const composite = ['ryunosuke\\Functions\\Package\\Funchand', 'composite'];
const return_arg = ['ryunosuke\\Functions\\Package\\Funchand', 'return_arg'];
const not_func = ['ryunosuke\\Functions\\Package\\Funchand', 'not_func'];
const eval_func = ['ryunosuke\\Functions\\Package\\Funchand', 'eval_func'];
const reflect_callable = ['ryunosuke\\Functions\\Package\\Funchand', 'reflect_callable'];
const closurize = ['ryunosuke\\Functions\\Package\\Funchand', 'closurize'];
const call_safely = ['ryunosuke\\Functions\\Package\\Funchand', 'call_safely'];
const ob_capture = ['ryunosuke\\Functions\\Package\\Funchand', 'ob_capture'];
const by_builtin = ['ryunosuke\\Functions\\Package\\Funchand', 'by_builtin'];
const parameter_length = ['ryunosuke\\Functions\\Package\\Funchand', 'parameter_length'];
const function_shorten = ['ryunosuke\\Functions\\Package\\Funchand', 'function_shorten'];
const func_user_func_array = ['ryunosuke\\Functions\\Package\\Funchand', 'func_user_func_array'];
const function_alias = ['ryunosuke\\Functions\\Package\\Funchand', 'function_alias'];
const minimum = ['ryunosuke\\Functions\\Package\\Math', 'minimum'];
const maximum = ['ryunosuke\\Functions\\Package\\Math', 'maximum'];
const mode = ['ryunosuke\\Functions\\Package\\Math', 'mode'];
const mean = ['ryunosuke\\Functions\\Package\\Math', 'mean'];
const median = ['ryunosuke\\Functions\\Package\\Math', 'median'];
const average = ['ryunosuke\\Functions\\Package\\Math', 'average'];
const sum = ['ryunosuke\\Functions\\Package\\Math', 'sum'];
const random_at = ['ryunosuke\\Functions\\Package\\Math', 'random_at'];
const probability = ['ryunosuke\\Functions\\Package\\Math', 'probability'];
const strcat = ['ryunosuke\\Functions\\Package\\Strings', 'strcat'];
const split_noempty = ['ryunosuke\\Functions\\Package\\Strings', 'split_noempty'];
const multiexplode = ['ryunosuke\\Functions\\Package\\Strings', 'multiexplode'];
const quoteexplode = ['ryunosuke\\Functions\\Package\\Strings', 'quoteexplode'];
const str_equals = ['ryunosuke\\Functions\\Package\\Strings', 'str_equals'];
const str_contains = ['ryunosuke\\Functions\\Package\\Strings', 'str_contains'];
const str_putcsv = ['ryunosuke\\Functions\\Package\\Strings', 'str_putcsv'];
const str_subreplace = ['ryunosuke\\Functions\\Package\\Strings', 'str_subreplace'];
const str_between = ['ryunosuke\\Functions\\Package\\Strings', 'str_between'];
const starts_with = ['ryunosuke\\Functions\\Package\\Strings', 'starts_with'];
const ends_with = ['ryunosuke\\Functions\\Package\\Strings', 'ends_with'];
const camel_case = ['ryunosuke\\Functions\\Package\\Strings', 'camel_case'];
const pascal_case = ['ryunosuke\\Functions\\Package\\Strings', 'pascal_case'];
const snake_case = ['ryunosuke\\Functions\\Package\\Strings', 'snake_case'];
const chain_case = ['ryunosuke\\Functions\\Package\\Strings', 'chain_case'];
const random_string = ['ryunosuke\\Functions\\Package\\Strings', 'random_string'];
const kvsprintf = ['ryunosuke\\Functions\\Package\\Strings', 'kvsprintf'];
const preg_capture = ['ryunosuke\\Functions\\Package\\Strings', 'preg_capture'];
const preg_splice = ['ryunosuke\\Functions\\Package\\Strings', 'preg_splice'];
const render_string = ['ryunosuke\\Functions\\Package\\Strings', 'render_string'];
const render_file = ['ryunosuke\\Functions\\Package\\Strings', 'render_file'];
const returns = ['ryunosuke\\Functions\\Package\\Syntax', 'returns'];
const optional = ['ryunosuke\\Functions\\Package\\Syntax', 'optional'];
const throws = ['ryunosuke\\Functions\\Package\\Syntax', 'throws'];
const ifelse = ['ryunosuke\\Functions\\Package\\Syntax', 'ifelse'];
const try_catch = ['ryunosuke\\Functions\\Package\\Syntax', 'try_catch'];
const try_finally = ['ryunosuke\\Functions\\Package\\Syntax', 'try_finally'];
const try_catch_finally = ['ryunosuke\\Functions\\Package\\Syntax', 'try_catch_finally'];
const cache = ['ryunosuke\\Functions\\Package\\Utility', 'cache'];
const error = ['ryunosuke\\Functions\\Package\\Utility', 'error'];
const benchmark = ['ryunosuke\\Functions\\Package\\Utility', 'benchmark'];
const stringify = ['ryunosuke\\Functions\\Package\\Vars', 'stringify'];
const numberify = ['ryunosuke\\Functions\\Package\\Vars', 'numberify'];
const is_primitive = ['ryunosuke\\Functions\\Package\\Vars', 'is_primitive'];
const is_recursive = ['ryunosuke\\Functions\\Package\\Vars', 'is_recursive'];
const is_iterable = ['ryunosuke\\Functions\\Package\\Vars', 'is_iterable'];
const is_countable = ['ryunosuke\\Functions\\Package\\Vars', 'is_countable'];
const var_type = ['ryunosuke\\Functions\\Package\\Vars', 'var_type'];
const var_export2 = ['ryunosuke\\Functions\\Package\\Vars', 'var_export2'];
const var_html = ['ryunosuke\\Functions\\Package\\Vars', 'var_html'];
const hashvar = ['ryunosuke\\Functions\\Package\\Vars', 'hashvar'];
